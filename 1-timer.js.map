{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\nstartBtn: document.querySelector(\"[data-start]\"),\ndatatimerPicker: document.querySelector(\"datetime-picker\"),\ntimer: document.querySelector(\".timer\")\n};\nlet userSelectedDate = null;\nlet timerInterval = null;\n\n\n\n  function validedSelectedDate(selectedDates){\nif(selectedDates < new Data()) {\n    iziToast.error({\n        title: \"alarm\",\n        message: \"Please choose a date in the future\",\n    });\n    startBtn.disabled = true;\n}else{\n    userSelectedDate = selectedDates[0];\n    startBtn.disabled = false;\n}\n  };\n  const options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      console.log(selectedDates[0]);\n    },\n  };\n  flatpickr(dateTimePicker, options);\n\n  function convertMs(ms) {\n      const second = 1000;\n      const minute = second * 60;\n      const hour = minute * 60;\n      const day = hour * 24;\n      return {\n          days: Math.floor(ms / day),\n          hours: Math.floor((ms % day) / hour),\n          minutes: Math.floor(((ms % day) % hour) / minute),\n          seconds: Math.floor((((ms % day) % hour) % minute) / second),\n      };\n  }\n\n  function addLeadingZero(value) {\n      return String(value).padStart(2, \"0\");\n  }\n\n  function updateTimerDisplay({ days, hours, minutes, seconds }) {\n      document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n      document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n      document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n      document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n  }\n\n  startButton.addEventListener(\"click\", () => {\n      startButton.disabled = true;\n      dateTimePicker.disabled = true;\n      timerInterval = setInterval(() => {\n          const now = new Date();\n          const timeRemaining = userSelectedDate - now;\n          if (timeRemaining <= 0) {\n              clearInterval(timerInterval);\n              updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n              dateTimePicker.disabled = false;\n              return;\n          }\n          updateTimerDisplay(convertMs(timeRemaining));\n      }, 1000);\n  });\n\n    "],"names":["userSelectedDate","timerInterval","options","selectedDates","flatpickr","convertMs","ms","addLeadingZero","value","updateTimerDisplay","days","hours","minutes","seconds","timeRemaining"],"mappings":"oFAOU,SAAS,cAAc,cAAc,EAC9B,SAAS,cAAc,iBAAiB,EAClD,SAAS,cAAc,QAAQ,EAEtC,IAAIA,EAAmB,KACnBC,EAAgB,KAgBlB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACL,EACEC,EAAU,eAAgBF,CAAO,EAEjC,SAASG,EAAUC,EAAI,CAKnB,MAAO,CACH,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CACrE,CACG,CAED,SAASC,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACvC,CAED,SAASC,EAAmB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC3D,SAAS,cAAc,aAAa,EAAE,YAAcN,EAAeG,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcH,EAAeI,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcJ,EAAeK,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,CAChF,CAED,YAAY,iBAAiB,QAAS,IAAM,CACxC,YAAY,SAAW,GACvB,eAAe,SAAW,GAC1BZ,EAAgB,YAAY,IAAM,CAE9B,MAAMa,EAAgBd,EADV,IAAI,KAEhB,GAAIc,GAAiB,EAAG,CACpB,cAAcb,CAAa,EAC3BQ,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChE,eAAe,SAAW,GAC1B,MACH,CACDA,EAAmBJ,EAAUS,CAAa,CAAC,CAC9C,EAAE,GAAI,CACb,CAAG"}